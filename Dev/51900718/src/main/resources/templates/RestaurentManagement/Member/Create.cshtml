@{
    ViewData["Title"] = "Thêm hội viên";
    Layout = "~/Views/Shared/_Layout_Private.cshtml";


}

@section Stylesheets{
<link rel="stylesheet" href="~/css/private/member.css">
}
<div class="member-create">
    <div class="title">
        Thêm hội viên
        <span></span>
    </div>
    <a href="/comnha/members" class="text-danger d-inline-block pt-2">Trở lại</a>
    <div class="container">
        <div class="row pt-3">
            <div class="col-12 col-lg-8 offset-lg-2">
                <form id="create-form" class="needs-validation" novalidate method="POST">
                    <div class="form-row">
                        
                        <div class="col-12 mb-2">
                            <label class="mb-1" for="name">Họ và tên:</label>
                            <input type="text" class="form-control" id="name" name="name" placeholder="Nhập họ và tên"
                                required>
                            <div class="invalid-feedback">Vui lòng nhập họ và tên!</div>
                        </div>
                        
                        <div class="col-md-6 mb-2">
                            <label class="mb-1" for="phone">Số điện thoại:</label>
                            <input type="number" class="form-control" id="phone" name="phone"
                                placeholder="Nhập số điện thoại" required>
                            <div class="invalid-feedback">Vui lòng nhập số điện thoại!</div>
                        </div>

                        <div class="col-md-6 mb-2">
                            <label class="mb-1" for="phone">Email:</label>
                            <input type="email" class="form-control" id="email" name="email"
                                placeholder="Nhập email" required>
                            <div class="invalid-feedback">Vui lòng nhập địa chỉ email!</div>
                        </div>

                        <div class="col-md-12 mb-2">
                            <label class="mb-1" for="phone">Địa chỉ:</label>
                            <input type="address" class="form-control" id="address" name="address"
                                placeholder="Nhập số địa chỉ" required>
                            <div class="invalid-feedback">Vui lòng nhập địa chỉ !</div>
                        </div>
                        
                        <div class="col-md-6 mb-2">
                            <label class="mb-1" for="branch">Quyền lợi:</label>
                            <select id="vip-rank" class="custom-select" name="vip-rank" required>
                                <option value="">--Chọn quyền lợi--</option>
                                <option value="VIP Bronze">VIP Bronze</option>
                                <option value="VIP Silver">VIP Silver</option>
                                <option value="VIP Gold">VIP Gold</option>
                                <option value="VIP Diamond">VIP Diamond</option>
                            </select>
                            <div class="invalid-feedback">Vui lòng chọn quyền lợi!</div>
                        </div>
                    </div>

                    @*<div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                        <strong></strong>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>*@

                     <div id="alert-message" class="text-danger d-none"
                        style="font-size: 100%; margin-top: 0.25rem; margin-bottom: 0.25rem; width: 100%">
                        Mật khẩu xác thực không trùng khớp!
                    </div>

                    <div class="d-flex justify-content-end mt-2">
                        <button type="reset" class="btn btn-outline-primary mr-2" id="reset-btn">Nhập lại</button>
                        <button type="submit" class="btn btn-outline-success">Xác nhận</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            $("div.alert").hide();
            const form = document.getElementById('create-form')

            form.addEventListener('submit', function (event) {
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');

                const member_data = $("#create-form").serializeArray();
                console.log(member_data);

                if ( member_data.length != 6 ){
                    return;
                }

                if (member_data[0]["value"].trim() === '' ||
                    member_data[1]["value"].trim() === '' ||
                    member_data[2]["value"].trim() === '' ||
                    member_data[3]["value"].trim() === '' ||
                    member_data[4]["value"].trim() === ''
                ) {
                    showError("Vui lòng nhập đầy đủ thông tin !");
                    return;
                }

                  
                let API_URL = `https://localhost:5556/api/comnha/create-member`;
                const options = {
                    credentials: 'same-origin',
                    method: 'POST',
                    mode: 'cors',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json;charset=UTF-8'
                    },
                    body: JSON.stringify({
                        tenHoiVien: member_data[0]["value"],
                        soDienThoai: member_data[1]["value"],
                        tongSoTienThanhToan: 0,
                        email: member_data[2]["value"],
                        matKhau: "",
                        diaChi: member_data[3]["value"],
                        quyenLoi: member_data[4]["value"],
                    })
                }

                fetch(API_URL, options)
                    .then(json_result => {
                        return json_result.json();
                    })
                    .then(result => {
                        console.log(result);
                        if ( result.status ){
                            showSuccess(result.message);
                            form.reset();
                        } else {
                            showError(result.message);
                        } 
                    })
                    .catch(error => {
                                
                    })  

            }, false);

        }, false);
    })();

    const alert = $("#alert-message");

    function showError(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-danger");

        alert.html(message);
    }

    function showSuccess(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-success");

        alert.html(message);
    }

    function isVietnamesePhoneNumber(number) {
        return /(84|0[3|5|7|8|9])+([0-9]{8})\b/.test(number);
    }

</script>
}