
@{
    ViewData["Title"] = "Thêm món ăn";
    Layout = "~/Views/Shared/_Layout_Private.cshtml";

    Monan food = ViewData["FoodDetail"] as Monan;
    var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");

     IEnumerable<Nhommonan> foodGroups = ViewData["FoodGroupList"] as IEnumerable<Nhommonan>;
}

@section Stylesheets{
    <link rel="stylesheet" href="~/css/private/food.css">
}
<div class="food-create">
    <div class="title">
        Thêm món ăn
        <span></span>
    </div>
    <div class="food-create__content pt-2">
        <a href="/comnha/foods" class="text-danger">Trở lại</a>
        <form id="create-form"  class="needs-validation pt-4" novalidate enctype="multipart/form-data" method="POST">
            <div class="row">
           
                <div class="col-12 col-lg-4">
                    <div class="food-create__img">
                        <div class="food-create__img-wrapper">
                            <img id="food-create__img-view" src="~/images/food.jpg" alt="Food">
                            <label for="food-create__img-input">
                                <i class="fa-solid fa-camera"></i>
                            </label>
                        </div>
                        <div class="form-group">
                            <input type="file" id="food-create__img-input" class="form-control d-none" accept="image/*"
                                name="image" required>
                            <div class="invalid-feedback text-center mt-3">
                                Vui lòng tải ảnh món ăn!
                            </div>
                        </div>
                    </div>
                </div>
             
                <div class="col-12 col-lg-8 px-0">
                    <div class="form-row">
                 
                        <div class="col-12 mb-2">
                            <label class="mb-1" for="name">Tên món ăn:</label>
                            <input type="text" class="form-control" id="name" name="name" placeholder="Nhập tên món ăn"
                                required>
                            <div class="invalid-feedback">Vui lòng nhập tên món ăn!</div>
                        </div>
            
                        <div class="col-md-6 mb-2">
                            <label class="mb-1" for="unit">Đơn vị:</label>
                            <input type="text" class="form-control" id="unit" name="unit" placeholder="Nhập đơn vị"
                                required>
                            <div class="invalid-feedback">Vui lòng nhập đơn vị!</div>
                        </div>
              
                        <div class="col-md-6 mb-2">
                            <label class="mb-1" for="price">Giá bán:</label>
                            <input type="number" class="form-control" id="price" name="price"
                                placeholder="Nhập giá bán" required>
                            <div class="invalid-feedback">Vui lòng nhập giá bán!</div>
                        </div>
          
                        <div class="col-12 mb-2">
                            <label class="mb-1" for="group">Nhóm món ăn:</label>
                            <select id="group" class="custom-select" name="group" required>
                                <option value="">--Chọn nhóm món ăn--</option>
                                @foreach(Nhommonan nhommonan in foodGroups){
                                    <option id="option-@nhommonan.MaNhom" value="@nhommonan.MaNhom">@nhommonan.TenNhom</option>
                                }
                            </select>
                            <div class="invalid-feedback">Vui lòng chọn nhóm món ăn!</div>
                        </div>
                      
                        <div class="col-12 mb-2">
                            <label class="mb-1" for="desc">Mô tả ngắn:</label>
                            <input type="text" class="form-control" id="desc" name="desc"
                                placeholder="Nhập mô tả ngắn" required>
                            <div class="invalid-feedback">Vui lòng nhập mô tả ngắn!</div>
                        </div>
            
                        <div class="col-12 mb-2">
                            <label class="mb-1" for="desc-detail">Mô tả chi tiết:</label>
                            <textarea type="text" class="form-control" id="desc-detail" name="desc-detail"
                                placeholder="Nhập mô tả chi tiết" rows="5" required></textarea>
                            <div class="invalid-feedback">Vui lòng nhập mô tả chi tiết!</div>
                        </div>
                    </div>

                    <div id="alert-message" class="text-danger d-none"
                        style="font-size: 100%; margin-top: 0.25rem; margin-bottom: 0.25rem; width: 100%">
                        Mật khẩu xác thực không trùng khớp!
                    </div>


                    <div class="d-flex flex-row justify-content-end mt-2">
                        <button type="reset" class="btn btn-outline-secondary mr-2">Nhập lại</button>
                        <button type="submit" class="btn btn-outline-success">Thêm</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts{
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const imageInput = document.getElementById('food-create__img-input')
            const imageView = document.getElementById('food-create__img-view')

            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms,  function (form) {
                form.addEventListener('submit', async function (event) {
                     event.preventDefault();
                    event.stopPropagation();

                    form.classList.add('was-validated');

                    const food_data = $("#create-form").serializeArray();
                    console.log(food_data); 

                    if ( food_data.length != 7 ){
                        return;
                    }

                    if ( imageUpload == null ){
                         showError("Vui lòng upload ảnh món ăn !");
                        return;
                    }

                    if (food_data[0]["value"].trim() === '' ||
                        food_data[1]["value"].trim() === '' ||
                        food_data[2]["value"].trim() === '' ||
                        food_data[3]["value"].trim() === '' ||
                        food_data[4]["value"].trim() === '' ||
                        food_data[5]["value"].trim() === '' 
                    ) {
                        showError("Vui lòng nhập đầy đủ thông tin !");
                        return;
                    }

                    if (isNaN(food_data[2]["value"]) || parseFloat(food_data[2]["value"]) <= 0) {
                        showError("Giá món ăn phải lớn hơn 0 !");
                        return;
                    }

                    var formData = new FormData(); // Currently empty
                    formData.set('food-image', imageUpload);

                    let API_URL_IMAGE = `https://localhost:7219/ComNha/api/upload-image`;
                    const options = {
                        credentials: 'same-origin',
                        method: 'POST',
                        mode: 'cors',
                        headers: {
                            'Accept': 'application/json'
                        },
                        body: formData
                    }

                    fetch(API_URL_IMAGE, options)
                        .then(json_result => {
                            return json_result.json();
                        })
                        .then(result => {
                            console.log(result);
                            if ( result.status ){
                                let API_URL = `https://localhost:5556/api/comnha/create-food`;
                                const options1 = {
                                    credentials: 'same-origin',
                                    method: 'POST',
                                    mode: 'cors',
                                    headers: {
                                        'Accept': 'application/json',
                                        'Content-Type': 'application/json;charset=UTF-8'
                                    },
                                    body: JSON.stringify({
                                        maMonAn: "NM000",
                                        tenMonAn: food_data[0]["value"],
                                        donGia: parseFloat(food_data[2]["value"]),
                                        donVi: food_data[1]["value"],
                                        moTa: food_data[5]["value"],
                                        moTaNgan: food_data[4]["value"],
                                        hinhAnh: result.data,
                                        maNhom: food_data[3]["value"],
                                        maNhomNavigation: {
                                            maNhom: food_data[3]["value"],
                                            tenNhom: $("#option-"+food_data[3]["value"]).html()
                                        }
                                    })
                                }

                                fetch(API_URL, options1)
                                    .then(json_result1 => {
                                        return json_result1.json();
                                    })
                                    .then(result1 => {
                                        console.log(result1);
                                        if ( result1.status ){
                                            //window.location.href = "/comnha/staffs"
                                            showSuccess(result1.message);
                                            form.reset();
                                        } else {
                                            showError(result1.message);
                                        }
                                    })
                                    .catch(error => {
                                
                                    })  
                            } else {
                                showError(result.message);
                            }
                        })
                        .catch(error => {
                                 
                        })      
                }, false); 
            });

            var imageUpload = null;

            imageInput.addEventListener('change', function(e) {
                const file = e.target.files[0]
                const reader = new FileReader()

                imageUpload = file;

                reader.onload = function(e) {
                    imageView.setAttribute('src', e.target.result)
                }

                reader.readAsDataURL(file)
            }); 
        }, false);
    })();

    const alert = $("#alert-message");

    function showError(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-danger");

        alert.html(message);
    }

    function showSuccess(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-success");

        alert.html(message);
    }
</script>
}