
@{
    ViewData["Title"] = "Sửa thông tin nhóm món ăn";
    Layout = "~/Views/Shared/_Layout_Private.cshtml";

    Nhommonan nhommonan = null;
    if ( ViewData.ContainsKey("DetailFoodGroup") && ViewData["DetailFoodGroup"] != null)
    {
        nhommonan = ViewData["DetailFoodGroup"] as Nhommonan;
    };

   
}

@section Stylesheets{
    <link rel="stylesheet" href="~/css/private/food.css">
}

<div class="food-group-edit">
    <div class="title">
        Chỉnh sửa nhóm món ăn
        <span></span>
    </div>
    <div class="food-group-edit__content pt-2">
        <a href="/comnha/foods" class="text-danger">Trở lại</a>
        <form id="update-form" class="needs-validation pt-4" novalidate method="POST">             

            <input type="hidden" name="food-group-id" value="@nhommonan.MaNhom" />

            <div class="d-flex flex-column px-5">
                <label class="mb-1" for="name">Tên nhóm món ăn:</label>
                <input type="text" class="form-control" id="name" name="name" placeholder="Nhập tên nhóm món ăn"
                    autocomplete="off" value="@nhommonan.TenNhom" required>
                <div class="invalid-feedback">Vui lòng nhập tên nhóm món ăn!</div>
            </div>

             <div id="alert-message" class="text-danger d-none"
                style="font-size: 100%; margin-top: 0.25rem; margin-bottom: 0.25rem; width: 100%">
                Mật khẩu xác thực không trùng khớp!
            </div>

            <div class="d-flex flex-row justify-content-end mt-3 mr-5">
                <button type="reset" class="btn btn-outline-secondary mr-2">Nhập lại</button>
                <button type="submit" class="btn btn-outline-success">Sửa</button>
            </div>
        </form>
    </div>
</div>

@section Scripts{
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    form.classList.add('was-validated');

                    const foodGroupData = $("#update-form").serializeArray();
                    console.log(foodGroupData);

                    if ( foodGroupData.length != 3 ){
                        return;
                    }
                  
                    let API_URL = `https://localhost:5556/api/comnha/edit-food-group`;
                    const options = {
                        credentials: 'same-origin',
                        method: 'PUT',
                        mode: 'cors',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json;charset=UTF-8'
                        },
                        body: JSON.stringify({
                            maNhom: foodGroupData[0]["value"],
                            tenNhom: foodGroupData[1]["value"]
                        })
                    }

                    fetch(API_URL, options)
                        .then(json_result => {
                            return json_result.json();
                        })
                        .then(result => {
                            console.log(result);
                            if ( result.status ){
                                showSuccess(result.message);
                            } else {
                                showError(result.message);
                            } 
                        })
                        .catch(error => {
                                
                        })  
                }, false);
            });
        }, false);
    })();

    const alert = $("#alert-message");

    function showError(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-danger");

        alert.html(message);
    }

    function showSuccess(message){
        alert.removeClass("text-success");
        alert.removeClass("text-danger");
        alert.removeClass("d-none");

        alert.addClass("text-success");

        alert.html(message);
    }
</script>
}